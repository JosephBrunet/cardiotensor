[DATASET]
# Folder where the images are located (tif or jp2)
IMAGES_PATH = /examples/heart_data
# Folder where the mask is located  (tif or jp2). If no mask leave empty
MASK_PATH = /examples/heart_data_mask
# True if the first images of the datasets are on the superior side of the heart and the last images are on the apex side. False if the other way around
FLIP = True

[OUTPUT]
# Folder where you want to put the result
OUTPUT_PATH = /examples/output
#Output file format (default jp2)
OUTPUT_FORMAT = jp2
# Pixel type if the output (rgb or 8bit)
OUTPUT_TYPE = 8bit
#Write the orientation vector at each points of the volume .npy
VECTORS = True

[STRUCTURE TENSOR CALCULATION]
# Noise scale window (blur structures smaller than this voxel size)
SIGMA = 1
# Integration scale window (calculate the orientation on this amount of voxel)
RHO = 3
# Number of slices loaded in memory at a time
N_CHUNK = 100

[LV AXIS COORDINATES]
# Mitral valve point coordinates (X, Y, Z)
POINT_MITRAL_VALVE = 2288,1072,1929
# Apex point coordinates (X, Y, Z)
POINT_APEX = 1600,1984,3354

[RUN]
# Make the pipeline run in reverse order (apex toward top of the heart) if True
REVERSE = True

[OUTPUT]
#Write the orientation vector at each points of the volume .npy
VECTORS = True

[TEST]
# If True only process and plot a slice, if False do the entire processing and write the output in the OUTPUT_PATH
TEST = True
# Slice number of the test (useful only if TEST is true)
N_SLICE_TEST = 1000
